C51 COMPILER V9.60.0.0   MAIN_PROJECT                                                      08/01/2023 10:36:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN_PROJECT
OBJECT MODULE PLACED IN E:\RFID project\main_project.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main_project.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2) OBJEC
                    -T(E:\RFID project\main_project.obj)

line level    source

   1          /** compiler directives **/
   2          #include<reg52.h>
   3          #include<string.h>
   4          
   5          /** user defined header files **/
   6          #include"delay.h"
   7          #include"lcd.h"
   8          #include"uart.h"
   9          #include"i2c.h"
  10          #include"keypad.h"
  11          
  12          extern unsigned char rec_buff[25],k;
  13          extern bit r_flag;
  14          
  15          sbit fan_s0=P1^0;
  16          sbit fan_s1=P1^1;
  17          
  18          /*external interrupt routine*/
  19          void ext_int(void) interrupt 0
  20          {
  21   1        unsigned char pass[20],i;
  22   1      
  23   1        memset(pass,'\0',20);
  24   1        cmd_lcd(0x01);
  25   1        cmd_lcd(0x80);
  26   1        str_lcd("Edit password:");
  27   1        delay_ms(1000);
  28   1        cmd_lcd(0x01);
  29   1        cmd_lcd(0x80);
  30   1        str_lcd("password typing :");
  31   1        cmd_lcd(0xc0);
  32   1        /*for(i=0;i<4;i++)
  33   1        {
  34   1          //while(IsKeyPress());
  35   1          
  36   1          pass[i]=KeyValue();
  37   1          i2c_device_write(0xa0,0x00|i,pass[i]);
  38   1          putc_lcd(pass[i]);
  39   1          
  40   1        }*/
  41   1        
  42   1        i=0;
  43   1        while(1)
  44   1        {
  45   2          pass[i]=KeyValue();
  46   2            
  47   2            if(pass[i]=='#' && i!=0)
  48   2            {
  49   3              i2c_device_write(0xa0,0x00|i,pass[i]);
  50   3              pass[i]=0;
  51   3              break;
  52   3            }
  53   2      
  54   2             if(pass[i]=='c' && (i!=0))
C51 COMPILER V9.60.0.0   MAIN_PROJECT                                                      08/01/2023 10:36:05 PAGE 2   

  55   2            {
  56   3              /*clear one character on lcd*/
  57   3              cmd_lcd(0x10);
  58   3              putc_lcd(' ');
  59   3              cmd_lcd(0x10);
  60   3              i--;
  61   3              continue;
  62   3            }
  63   2      
  64   2              /*display number and star immediately on lcd*/
  65   2              i2c_device_write(0xa0,0x00|i,pass[i]);
  66   2              putc_lcd(pass[i]);
  67   2              delay_ms(150);
  68   2              cmd_lcd(0x10);
  69   2              putc_lcd('*');
  70   2              i++;
  71   2        }
  72   1        
  73   1        cmd_lcd(0x01);
  74   1        cmd_lcd(0x80);
  75   1        str_lcd("password updated :");
  76   1        delay_ms(1000);
  77   1      
  78   1        cmd_lcd(0x01);
  79   1        cmd_lcd(0x80);
  80   1        str_lcd("waiting for card");
  81   1      }
  82          
  83          
  84          
  85          /** main function **/
  86          int main()
  87          {
  88   1        char card_no[]="12530066",i,ch[20],flag=0,tries;
  89   1      
  90   1        delay_ms(1000);
  91   1        uart_init();
  92   1        init_lcd();
  93   1      
  94   1        while(1)
  95   1        {
  96   2          tries=3;
  97   2            /*loop for card scanning*/
  98   2          while(1)
  99   2          {
 100   3          //uart_string("\r\nEnter data:\r\n");
 101   3          cmd_lcd(0x01);
 102   3          cmd_lcd(0x80);
 103   3          str_lcd("Waiting for card");
 104   3          r_flag=0;k=0;
 105   3          memset(rec_buff,'\0',25);
 106   3          while(r_flag==0);
 107   3          cmd_lcd(0x01);  
 108   3          cmd_lcd(0x80);
 109   3          str_lcd("card scanned");
 110   3          delay_ms(1000);
 111   3          cmd_lcd(0x01);
 112   3          cmd_lcd(0x80);
 113   3      
 114   3          if(strcmp(rec_buff,card_no)!=0)
 115   3          {
 116   4            str_lcd("invalid card");
C51 COMPILER V9.60.0.0   MAIN_PROJECT                                                      08/01/2023 10:36:05 PAGE 3   

 117   4            cmd_lcd(0xc0);
 118   4            str_lcd("retry scanning");
 119   4            delay_ms(2000);
 120   4            continue;     
 121   4          }
 122   3      
 123   3          else
 124   3          {
 125   4            str_lcd("card found..");
 126   4            cmd_lcd(0xc0);
 127   4            str_lcd(rec_buff);
 128   4            delay_ms(1000);
 129   4            cmd_lcd(0x01);
 130   4            cmd_lcd(0x80);
 131   4            break;
 132   4          }
 133   3        }
 134   2      
 135   2        /*loop for typing password*/    
 136   2      
 137   2        while(1)
 138   2        {
 139   3        again:str_lcd("enter password");
 140   3          cmd_lcd(0xc0);
 141   3          memset(ch,'\0',20);
 142   3          /*for(i=0;i<4;i++)
 143   3          {
 144   3            ch=KeyValue();
 145   3            if(ch!= i2c_device_read(0xa0,0x00|i))
 146   3            {
 147   3              flag=1;
 148   3            }
 149   3          }*/
 150   3          
 151   3          i=0;
 152   3          while(1)
 153   3          { 
 154   4            ch[i]=KeyValue();
 155   4            
 156   4            if(ch[i]=='#' && i!=0)
 157   4            {
 158   5              if(ch[i]!= i2c_device_read(0xa0,0x00|i))
 159   5                flag++;
 160   5      
 161   5              break;
 162   5            }
 163   4            else if((ch[i]=='#' && i==0))
 164   4            {
 165   5              cmd_lcd(0x10);
 166   5              cmd_lcd(0x80);
 167   5              str_lcd("nothing entered"); 
 168   5              cmd_lcd(0xc0);
 169   5              str_lcd("enter something");
 170   5              delay_ms(2000);
 171   5              cmd_lcd(0x01);
 172   5              cmd_lcd(0x80);
 173   5              goto again;   
 174   5            }
 175   4      
 176   4             if(ch[i]=='c' && (i!=0))
 177   4              {
 178   5              /*clear one character on lcd*/
C51 COMPILER V9.60.0.0   MAIN_PROJECT                                                      08/01/2023 10:36:05 PAGE 4   

 179   5              cmd_lcd(0x10);
 180   5              putc_lcd(' ');
 181   5              cmd_lcd(0x10);
 182   5              i--;
 183   5              
 184   5              if(ch[i]!= i2c_device_read(0xa0,0x00|i))
 185   5                flag--;
 186   5      
 187   5              continue;
 188   5            }
 189   4            else if((ch[i]=='c' && i==0))
 190   4              continue;
 191   4            
 192   4      
 193   4            putc_lcd(ch[i]);
 194   4            delay_ms(100);
 195   4            cmd_lcd(0x10);
 196   4            putc_lcd('*');
 197   4      
 198   4            if(ch[i]!= i2c_device_read(0xa0,0x00|i))
 199   4              flag++;
 200   4      
 201   4            i++;
 202   4          }
 203   3          
 204   3      
 205   3          if(flag>0)
 206   3          {
 207   4            tries--;
 208   4            if(tries==0)
 209   4            {
 210   5              cmd_lcd(0x01);
 211   5              cmd_lcd(0x80);
 212   5              str_lcd("card blocked");
 213   5              delay_ms(1000);
 214   5              break;
 215   5            }
 216   4      
 217   4            cmd_lcd(0x01);
 218   4            cmd_lcd(0x80);
 219   4            str_lcd("invalid password");
 220   4            cmd_lcd(0xc0);
 221   4            str_lcd("enter again..");
 222   4            delay_ms(1000);
 223   4            cmd_lcd(0x01);
 224   4            cmd_lcd(0x80);
 225   4            flag=0;
 226   4          }
 227   3      
 228   3          else
 229   3          {
 230   4            cmd_lcd(0x01);
 231   4            cmd_lcd(0x80);
 232   4            str_lcd("Door opened");
 233   4            /*write condition to open door*/
 234   4            fan_s0=1;
 235   4            fan_s1=0;
 236   4            delay_ms(50);
 237   4            fan_s0=0;
 238   4            
 239   4            delay_ms(3000);
 240   4      
C51 COMPILER V9.60.0.0   MAIN_PROJECT                                                      08/01/2023 10:36:05 PAGE 5   

 241   4            cmd_lcd(0x01);
 242   4            cmd_lcd(0x80);
 243   4            str_lcd("closing door");
 244   4            /*write condition to open door*/
 245   4            fan_s0=0;
 246   4            fan_s1=1;
 247   4            delay_ms(50);
 248   4            
 249   4            fan_s1=0;
 250   4            delay_ms(3000);
 251   4            break;
 252   4          }   
 253   3        } 
 254   2        }
 255   1      }//main end
 256          
 257          
*** WARNING C316 IN LINE 257 OF main_project.c: unterminated conditionals


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    966    ----
   CONSTANT SIZE    =    265    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      53
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
